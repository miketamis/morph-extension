{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Morph",
	"patterns": [
		{
		  "begin": "<([^\\>\\/\\s\\.]+\\.)?css(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "end": "<\\/([^\\>\\/\\s\\.]+\\.)?css(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "contentName": "meta.embedded.block.css",
		  "patterns": [
			{
			  "include": "source.css"
			}
		  ]
		},
		{
		  "begin": "<([^\\>\\/\\s\\.]+\\.)?js(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "end": "<\\/([^\\>\\/\\s\\.]+\\.)?js(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "contentName": "meta.embedded.block.js",
		  "patterns": [
			{
			  "include": "source.js"
			}
		  ]
		},
		{
		  "begin": "<([^\\>\\/\\s\\.]+\\.)?json(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "end": "<\\/([^\\>\\/\\s\\.]+\\.)?json(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "contentName": "meta.embedded.block.json",
		  "patterns": [
			{
			  "include": "source.json"
			}
		  ]
		},
		{
		  "begin": "<([^\\>\\/\\s\\.]+\\.)?html(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "end": "<\\/([^\\>\\/\\s\\.]+\\.)?html(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "contentName": "meta.embedded.block.html",
		  "patterns": [
			{
			  "include": "text.html.derivative"
			}
		  ]
		},
		{
		  "begin": "<([^\\>\\/\\s\\.]+\\.)?mustache(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "end": "<\\/([^\\>\\/\\s\\.]+\\.)?mustache(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "contentName": "meta.embedded.block.mustache",
		  "patterns": [
			{
			  "include": "source.mustache"
			}
		  ]
		},
		{
		  "begin": "<([^\\>\\/\\s\\.]+\\.)?xml(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "end": "<\\/([^\\>\\/\\s\\.]+\\.)?xml(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "contentName": "meta.embedded.block.xml",
		  "patterns": [
			{
			  "include": "source.xml"
			}
		  ]
		},
		{
		  "begin": "<([^\\>\\/\\s\\.]+\\.)?htl(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "end": "<\\/([^\\>\\/\\s\\.]+\\.)?htl(?:\\s+([^\\>\\/\\s]*))?\\s*>",
		  "contentName": "meta.embedded.block.htl",
		  "patterns": [
			{
			  "include": "source.htl"
			}
		  ]
		},
		{
			"name": "support.type.property-name.extension.morph",
			"match": "<([^\\>\\/\\s\\.]+)\\.?([^\\>\\/\\s]*)(?:\\s+([^\\>\\/\\s]*))?\\s*>",
			"captures": {
				"1": {
					"name": "support.type.property-name.extension.morph"
				},
				"2": {
					"name": "support.constant.extension.morph"
				}
			}
		}
	
	  ],
	"repository": {
		"keywords": {
		},
		"strings": {
		}
	},
	"scopeName": "source.morph"
}